@startuml Bradshaw Marina Case Study Class Diagram
skinparam classAttributeIconSize 0
abstract class Lease{
    -amount : String
    -startDate : Date
    -endDate : Date
    +calculateFee()
}

class AnnualLease{
    -payMonthly : Double
    -balanceDue : Double
    +calculateFee()
}

class DailyLease{
    -numberOfDays : Integer
    +calculateFee()
}

abstract class Boat{
    +stateRegistrationNO : String
    +boatLength : Double
    +manufactor : String
    +year: String
    +assignBoatToSlip()
    +removeBoatFromSlip()
    +String tellAboutSelf()
}

class Sailboat{
    +keelDedpth : Double
    +numberSails : Integer
    +motorType : Enum
    +String tellAboutSelf()
}

class Powerboat{
    +numberEngines : Integer
    +fuelType : Enum
    +String tellAboutSelf()
}

class Rowboat{
    +typeOfMaterial : Enum
    +oarType : Enum
    +String tellAboutSelf()
}

class CruisingSailBoat{
    +lifeRaftManufactor : String
}

class PersonalWatercraft{
    +numberOfPassengers : Integer
    +topSpeed : Integer
}

class Customer{
    -name : String
    -address : String
    -phoneNO : String
}

class Slip{
    +slipID : Long
    +width : Double
    +slipLength : Double
    +void leaseSlip()
}

class CoveredSlip{
    +height : Double
    +door : Boolean
}

class Dock{
    +dockID : Long
    +location : String
    +electricity : Boolean
    +water: Boolean
    +void addSlipToDock(Long slipID)
}

class BoatService{
    +Double calculateCharge(Lease)
    +String produceMonthlyReport()
}

class ServiceType{
    +void repair()
    +void haulOut()
    +void painting()
    +void maintain()
}

class ServiceParts{
    +partOfBoat : String[]
}


class ServiceTransaction{
    +void deposit()
    +void partialPayment()
    +void credit()
    +void refund()
}

interface BillingOperation{
    +{abstract} void generateBill()
    +{abstract} void recordPayment()
    +{abstract} void sendLateNotice()
    +{abstract} void produceAccountReceivable()
}


Customer "0..*" - "0..*" Slip
(Customer, Slip) .. Lease

Boat <|-- Sailboat
Boat <|-- Powerboat
Boat <|-- Rowboat

Sailboat <|-- CruisingSailBoat
Powerboat <|-- PersonalWatercraft

Slip <|-- CoveredSlip

Lease <|-- AnnualLease
Lease <|-- DailyLease

Customer "1" o-- "many" Boat
Dock "1" o-- "many" Slip
Slip "1" o-- "many" Boat

Customer "1..*" - "1..*" Boat
(Customer, Boat) .. BoatService

class BoatService implements BillingOperation
class Lease implements BillingOperation

BoatService "1" *-- "many" ServiceTransaction
Lease "1" *-- "many" ServiceTransaction

BoatService "1" *-- "1" ServiceType
ServiceType "1" *-- "many" ServiceParts


@enduml